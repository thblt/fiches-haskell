























Haskell connaît deux structures conditionnelles: les tests binaires avec
~if~, et les cas de ~case~.

* ~if ... then ... else~
  :PROPERTIES:
  :CUSTOM_ID: section
  :END:

\label{if-then-else}

Une clause ~if~ est une expression, pas une structure de contrôle. La
syntaxe est ~if a then b else c~, où ~a~ est une expression de
type ~Bool~, ~b~ et ~c~ des expressions d'un type
quelconque. Si ~a~ est vraie, l'expression vaut ~b~, sinon
~c~.

Comme c'est une expression, on peut affecter son résultat directement à
une variable:

#begin_src haskell
a = if even x then "pair" else "impair" #end_src

* ~case~
  :PROPERTIES:
  :CUSTOM_ID: section-1
  :END:

\label{case}
