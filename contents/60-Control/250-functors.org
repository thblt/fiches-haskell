























Il s'agit d'une [[#typeclasses][classe de type]], définie comme suit:

#begin_src haskell
class Functor f where fmap :: (a -> b) -> f a -> f b #end_src

#begin_law 1. ~fmap id === id~. Mapper =id= sur un foncteur renvoie le
même foncteur. Autrement dit, =fmap= ne peut pas introduire d'autres
modifications dans le foncteur que l'application de la fonction.

2. ~fmap (f . g)  ==  fmap f . fmap g~ #end_

La métaphore la plus répandue pour décrire un foncteur consiste à le
comparer à une boîte qui contient une valeur. La métaphore est un peu
courte. Plus abstraitement, un foncteur est un type de
[[#kinds][sorte]] =* -> *= qui permet l'application d'une fonction sur
les données du type encapsulée dans le foncteur.

Ainsi =->= (la définition de fonction) est un foncteur. Par exemple:

#+BEGIN_SRC haskell
    a = (*) 2        -- Application partielle
    b = fmap (*2) a  -- fmap
    b 2              -- == 8
#+END_SRC

#begin_info ~fmap~ est une généralisation de ~map~, et peut
donc toujours le remplacer. #end_
